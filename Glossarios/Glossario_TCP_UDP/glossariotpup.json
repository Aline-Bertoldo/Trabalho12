[{"term":"TCP","definition":"tem como característica ter uma transmissão confiável ponto-a-ponto."},{"term":"comunicação TCP","definition":"possuí 3 etapas:  \nSYN, -SYN-ACK, ACK."},{"term":"1° Etapa","definition":"O Cliente envia o \nSYN (Uma solicitação de conexão, no qual possui um sequencial de \nbytes para Cliente-Servidor);"},{"term":"2° Etapa","definition":"O Servidor aceita o pedido de conexão (SYN), e envia um pacote aceitando o pedido \n(ACK), no qual possui um sequencial de bytes para Servidor-Cliente;"},{"term":"3° Etapa","definition":"O Destino (servidor) transmite o ACK permitindo o SYN, então a troca de informações \né efetuada entre esses hosts, quando se encerra a conexão, tanto o cliente ou servidor podem \nfinalizar a conexão."},{"term":"SYN, SYN, ACK, ACK","definition":"Estabelecimento de Conexão (Three-Way Handshake) \"aperto de mãos\""},{"term":"FIN, ACK, FIN, ACK","definition":"Finalização de Conexão (Four-Way Handshake) \"aperto de mãos\""},{"term":"UDP","definition":"é um protocolo que não é confiável, pois ele só envia os dados para o host de destino"},{"term":"UDP","definition":"É mais rápido porém,  não dá garantias que o pacote será enviado até o seu destino, e muito menos que \nelas cheguem à ordem, pois não possui métodos para gerenciar os fluxosde dados."},{"term":"UDP utilização","definition":"é muito utilizado em serviço de multimídia (streaming e VOIP), pois se houver \nperda de dados não ocasiona delay na transmissão."},{"term":"Portas e serviços","definition":"Porta 20: FTP(File Transfer Protocol) - TCP,  Porta 25: SMTP(Simple Mail Transfer Protocol) - TCP, Porta 53: DNS(Domain Name System) - TCP/UDP,  Porta 80: HTTP (Hypertext Transfer Protocol) - TCP,  Porta 1433: Microsoft SQL Server - TCP."},{"term":"Sockets","definition":"são interfaces de programação que permitem que \naplicativos se comuniquem por meio de redes."},{"term":"sockets TCP","definition":"desenvolvedores precisam estabelecer uma conexão \nutilizando funções como `socket()`, `bind()`, `listen()` e `accept()`. Eles também devem implementar \na lógica de envio e recebimento de dados usando `send()` e `recv()`."},{"term":"sockets UDP","definition":"desenvolvedores criam sockets usando \n`socket()` e usam `sendto()` e \n`recvfrom()` para enviar e receber datagramas UDP."},{"term":"Diagnóstico de problemas TCP e UDP","definition":"latência excessiva, perda de pacotes, congestionamento e configurações inadequadas.  \nO TCP lida \nautomaticamente com retransmissões de pacotes perdidos, enquanto o UDP não o faz."},{"term":"medidas de segurança TCP eUDP","definition":"Criptografia, Autenticação, Firewalls, VPN (Rede Privada Virtual),  Controle de acesso, Monitoramento de segurança."}]